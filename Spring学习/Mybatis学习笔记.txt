1.使用maven导入 mysql 和 mybatis依赖，在maven repository网中搜索

2.配置 mysql 和 mybatis （在application.properties中）

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root          #用户名
spring.datasource.password=123456     #密码
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml   #mapper的xml文件地址
mybatis.type-aliases-package=com.nowcoder.community.entity #实体类的包名
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.mapUnderscoreToCamelCase=true

3.resources文件夹中创建mapper文件夹，用来存放mapper的xml文件

4.建立entity包（实体类包）

5.创建实体类和mapper接口（@mapper）

6.配置该mapper接口的对应xml文件

在xml文件中写sql语句时，查询需要声明返回类型（resultType），插入和更新需要声明参数类型（parameterType）

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.UserMapper"> #该xml文件对应的mapper接口

	<sql id = "id">字段</sql>
	<include id="id"><include>           #可以等效替代

	#该id为mapper接口中对应的函数名称        #resultType为返回的类型
	<select id = "selectById" resultType="User">
		#   sql语句
                    select id,username,password,salt,email,type,status,activation_code,header_url,create_time
                    from user
                    where id = #{id}  #      #{id}代表函数参数值中的id
    	</select>
	--------------------------------------------------------------------------------------------------------------
		
		                         #需要insert的类型        #该类型的主键
	<insert id="insertUser" parameterType="User" keyProperty="id"> #该id为插入到数据库后，数据库自动生成的id回填
        
   	 </insert>

</mapper>

调整日志级别为debug，让输出的日志更详细，便于调试（在application.properties中）
# Logger
logging.level.com.nowcoder.community = debug



